#Trevor Smith
#Assignment 10
#3/30/25

import gamefunctions
import random

# Game variables
user_hp = 30
user_gold = 20
inventory = []
equipped_weapon = None  # Initialize as None at the global level

# Shop items
shop_items = [
    {"name": "Sword", "type": "weapon", "price": 15, "damage_bonus": 5, "durability": 5},
    {"name": "Axe", "type": "weapon", "price": 10, "damage_bonus": 3, "durability": 3},
    {"name": "Monster Repellent", "type": "weapon", "price": 8, "damage_bonus": 0, "durability": 1, "effect": "auto_defeat"},
    {"name": "Health Potion", "type": "consumable", "price": 5, "effect": "heal", "amount": 10}
]

def display_town_menu():
    """Displays the town menu and prompts the user for their choice."""
    print("\nYou are in town.")
    print(f"Current HP: {user_hp}, Current Gold: {user_gold}")
    if equipped_weapon:
        print(f"Equipped Weapon: {equipped_weapon['name']} (Durability: {equipped_weapon['durability']})")
    print("What would you like to do?")
    print("1) Leave town (Fight Monster)")
    print("2) Sleep (Restore HP for 5 Gold)")
    print("3) Visit Shop")
    print("4) Manage Inventory")
    print("5) Quit")

def visit_shop():
    """Allows the user to buy items from the shop."""
    global user_gold, inventory
    
    print("\nWelcome to the shop!")
    print(f"Your gold: {user_gold}")
    print("Available items:")
    
    for i, item in enumerate(shop_items, 1):
        print(f"{i}) {item['name']} - {item['price']} gold (Type: {item['type']})")
    
    print(f"{len(shop_items)+1}) Back to town")
    
    while True:
        choice = input("Enter your choice: ")
        
        try:
            choice = int(choice)
            if choice == len(shop_items)+1:
                return
            elif 1 <= choice <= len(shop_items):
                selected_item = shop_items[choice-1]
                if user_gold >= selected_item['price']:
                    user_gold -= selected_item['price']
                    # Create a new copy of the item for inventory
                    new_item = selected_item.copy()
                    # For weapons, add current durability equal to max durability
                    if new_item['type'] == 'weapon':
                        new_item['current_durability'] = new_item['durability']
                    inventory.append(new_item)
                    print(f"\nYou bought {selected_item['name']}!")
                    print(f"Remaining gold: {user_gold}")
                    break
                else:
                    print("\nNot enough gold!")
                    break
            else:
                print("\nInvalid choice. Please try again.")
        except ValueError:
            print("\nPlease enter a number.")

def manage_inventory():
    """Allows the user to view, equip, unequip, and use items."""
    global equipped_weapon, user_hp
    
    while True:
        print("\n=== INVENTORY ===")
        if not inventory:
            print("Your inventory is empty.")
            print("1) Back to town")
            choice = input("Enter your choice: ")
            if choice == "1":
                return
            continue
        
        # Display equipped weapon status
        if equipped_weapon:
            print(f"Currently equipped: {equipped_weapon['name']} "
                  f"({equipped_weapon.get('current_durability', equipped_weapon['durability'])}/{equipped_weapon['durability']} dura)")
        else:
            print("No weapon currently equipped")
        
        # Display all items
        for i, item in enumerate(inventory, 1):
            item_info = f"{i}) {item['name']} ({item['type']})"
            if item == equipped_weapon:
                item_info += " [EQUIPPED]"
            elif item['type'] == 'weapon':
                durability = item.get('current_durability', item['durability'])
                item_info += f" [Weapon - {durability}/{item['durability']} dura]"
            print(item_info)
        
        print(f"\nOptions:")
        print("1-{}) Select item".format(len(inventory)))
        if equipped_weapon:
            print("U) Unequip current weapon")
        print("B) Back to town")
        
        choice = input("\nWhat would you like to do? ").upper()
        
        if choice == "B":
            return
        elif choice == "U" and equipped_weapon:
            print(f"\nYou unequipped {equipped_weapon['name']}")
            equipped_weapon = None
            continue
        else:
            try:
                choice = int(choice)
                if 1 <= choice <= len(inventory):
                    selected_item = inventory[choice-1]
                    
                    if selected_item['type'] == "weapon":
                        if selected_item == equipped_weapon:
                            print(f"\n{selected_item['name']} is already equipped!")
                        else:
                            if equipped_weapon:
                                print(f"\nSwapped {equipped_weapon['name']} for {selected_item['name']}")
                            else:
                                print(f"\nEquipped {selected_item['name']}")
                            equipped_weapon = selected_item
                    
                    elif selected_item['type'] == "consumable":
                        use_consumable(selected_item)
                        return  # Return to town after using consumable
                    
                    else:
                        print("\nThis item has no special use.")
                else:
                    print("\nInvalid choice. Please try again.")
            except ValueError:
                print("\nPlease enter a valid item number or command.")
            
def use_consumable(item):
    """Uses a consumable item from the inventory."""
    global user_hp
    
    if item['effect'] == "heal":
        user_hp += item['amount']
        print(f"You used {item['name']} and healed {item['amount']} HP!")
    elif item['effect'] == "auto_defeat":
        print(f"You used {item['name']} - it will automatically defeat the next monster!")
    
    inventory.remove(item)

def fight_monster():
    """Handles the fight between the user and a monster."""
    global user_hp, user_gold, inventory, equipped_weapon
    
    # Generate a random monster
    monster = gamefunctions.new_random_monster()
    print("\nA wild monster appears!")
    print(f"Monster: {monster['name']}")
    print(f"Health: {monster['health']}")
    print(f"Power: {monster['power']}")

    while monster['health'] > 0 and user_hp > 0:
        # Check if current weapon is broken at start of each turn
        if equipped_weapon and equipped_weapon.get('current_durability', 1) <= 0:
            print(f"\nYour {equipped_weapon['name']} broke and is no longer usable!")
            inventory.remove(equipped_weapon)
            equipped_weapon = None

        # Display weapon durability if equipped
        weapon_status = ""
        if equipped_weapon:
            weapon_status = f" [Equipped: {equipped_weapon['name']} ({equipped_weapon['current_durability']}/{equipped_weapon['durability']} dura)]"
        
        # Display fight options with weapon status
        print("\nWhat would you like to do?")
        print(f"Current Status: HP {user_hp}{weapon_status}")
        print("1) Attack")
        print("2) Run away")
        choice = input("Enter your choice: ")

        if choice == "1":
            # Check if equipped weapon is consumable (auto-defeat)
            if equipped_weapon and equipped_weapon.get('effect') == 'auto_defeat':
                print(f"\nYou use your {equipped_weapon['name']}!")
                print(f"The {monster['name']} is instantly defeated!")
                user_gold += monster['money']
                print(f"You gained {monster['money']} gold!")
                inventory.remove(equipped_weapon)
                equipped_weapon = None
                return
            
            # Normal attack logic
            base_damage = random.randint(5, 15)
            total_damage = base_damage
            
            if equipped_weapon:
                # Apply weapon bonus
                total_damage += equipped_weapon['damage_bonus']
                print(f"Using {equipped_weapon['name']} (+{equipped_weapon['damage_bonus']} damage)")
                
                # Reduce durability and check if weapon breaks
                equipped_weapon['current_durability'] -= 1
                if equipped_weapon['current_durability'] <= 0:
                    print(f"Your {equipped_weapon['name']} broke!")
                    inventory.remove(equipped_weapon)
                    equipped_weapon = None
            
            # Apply damage
            monster['health'] -= total_damage
            print(f"\nYou dealt {total_damage} damage to the {monster['name']}!")

            # Monster counterattack
            monster_damage = random.randint(3, 10)
            user_hp -= monster_damage
            print(f"The {monster['name']} dealt {monster_damage} damage to you!")

            # Display current stats
            print(f"\nYour HP: {user_hp}")
            print(f"{monster['name']}'s HP: {monster['health']}")

        elif choice == "2":
            # User runs away
            print("\nYou ran away!")
            break

        else:
            print("Invalid choice. Please try again.")

    # Combat outcome
    if monster['health'] <= 0:
        print(f"\nYou defeated the {monster['name']}!")
        user_gold += monster['money']
        print(f"You gained {monster['money']} gold!")
    elif user_hp <= 0:
        print("\nYou were defeated... Game Over!")
        exit()

def sleep():
    """Restores the user's HP for 5 gold."""
    global user_hp, user_gold

    if user_gold >= 5:
        user_gold -= 5
        user_hp = 30
        print("\nYou slept and Restored your HP!")
    else:
        print("\nYou don't have enough gold to sleep.")

def main():
    """Main game loop."""
    global user_hp, user_gold

    print("Welcome to the game!")
    user_name = input("Please enter your name: ")
    gamefunctions.print_welcome(user_name)

    while True:
        display_town_menu()
        choice = input("Enter your choice: ")

        if choice == "1":
            fight_monster()
        elif choice == "2":
            sleep()
        elif choice == "3":
            visit_shop()
        elif choice == "4":
            manage_inventory()
        elif choice == "5":
            print("\nThanks for playing! Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

# Run the game
if __name__ == "__main__":
    main()
